@page
@model ToDoList.Pages.ListModel
@*@{
    ViewData["Title"] = "Nozbe 2";
}
<h1>@ViewData["Title"]</h1>

@if(Model.hasData)
{
    <p>Twój waśnie wpisany task to:</p>
    <p>* @Model.taskName</p>
}*@

@*<div>
    <form method="post">
        <label for="task">Add task</label><br>
        <input type="text" id="taskn" name="taskname"><br>

        <input type="submit" value="Submit">
    </form>
</div><br><br>*@
<header>
    <div class="navbar">
          <div class="leftnavbar">
              <a asp-page="/Index" class="chosen">Priority</a>
              <a asp-page="/Inbox">Inbox</a>
              <a asp-page="/Project">Projects</a>
              <a asp-page="/Category">Categories</a>
              @*<a>Calendar</a>*@
          </div>
          <div class="rightnavbar">
              <div class="columnname">
                  <span>Projects</span>
              </div>
              <a>Test1</a>
              <a>Test2</a>
              <div class="columnname">
                  <span>Categories</span>
              </div>
          </div>
    </div>
</header>



<div class="bigwindow">
<div class="mainlist">
    <div class="listline">
        <div class="columnname">
              <span>Priority</span>
        </div>
    </div>


    <h1>---------</h1>
    <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PriorityList[0].TaskName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriorityList[0].WhenToDo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriorityList[0].IsUrgent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriorityList[0].Project)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.PriorityList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TaskName)
                @*<p>@item.TaskName</p>*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WhenToDo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsUrgent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.ProjectName)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
</tbody>
</table>
</div>

</div>
@*<div>
    <h1>All Projects</h1>
    <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProjectsList[0].ProjectName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ProjectsList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectName)
            </td>
        </tr>
}
</tbody>
</table>
</div>
<br><br>

<div>
    <h1>All Categories</h1>
    <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CategoriesList[0].CategoryName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.CategoriesList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
        </tr>
}
    </tbody>
</table>
</div>
*@
